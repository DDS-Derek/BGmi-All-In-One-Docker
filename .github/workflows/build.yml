name: Release & Build image

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - info.json

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4

      - 
        name: Set Version
        id: set-version
        run: |
          RELEASE_VERSION=$(jq -r '.Release_Version' info.json)

          echo "RELEASE_VERSION=${RELEASE_VERSION}"

          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      -
        name: Generate Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set-version.outputs.RELEASE_VERSION }}
          name: ${{ steps.set-version.outputs.RELEASE_VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bgmi:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      
      - 
        name: Set Version
        id: set-version
        run: |
          BGMI_VERSION=$(jq -r '.BGmi.version' info.json)
          RELEASE_VERSION=$(jq -r '.Release_Version' info.json)

          echo "BGMI_VERSION=${BGMI_VERSION}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}"

          echo "BGMI_VERSION=${BGMI_VERSION}" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bgmi-all-in-one
          tags: |
            type=raw,value=${{ steps.set-version.outputs.RELEASE_VERSION }}
            type=raw,value=latest

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: |
            linux/386
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
            linux/arm/v6
          push: true
          build-args: |
            BGMI_VERSION=${{ steps.set-version.outputs.BGMI_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

  transmission:
    needs: [bgmi]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master
      
      - 
        name: Set Version
        id: set-version
        run: |
          TRANSMISSION_WEB_HOME=$(jq -r '.Transmission.web_home' info.json)
          RELEASE_VERSION=$(jq -r '.Release_Version' info.json)

          echo "TRANSMISSION_WEB_HOME=${TRANSMISSION_WEB_HOME}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}"

          echo "TRANSMISSION_WEB_HOME=${TRANSMISSION_WEB_HOME}" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bgmi-all-in-one
          tags: |
            type=raw,value=${{ steps.set-version.outputs.RELEASE_VERSION }}-transmission
            type=raw,value=transmission

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: transmission.Dockerfile
          platforms: |
            linux/386
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
            linux/arm/v6
          push: true
          build-args: |
            RELEASE_VERSION=${{ steps.set-version.outputs.RELEASE_VERSION }}
            TRANSMISSION_WEB_HOME=${{ steps.set-version.outputs.TRANSMISSION_WEB_HOME }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  aria2:
    needs: [bgmi]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master
      
      - 
        name: Set Version
        id: set-version
        run: |
          RELEASE_VERSION=$(jq -r '.Release_Version' info.json)

          echo "RELEASE_VERSION=${RELEASE_VERSION}"

          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bgmi-all-in-one
          tags: |
            type=raw,value=${{ steps.set-version.outputs.RELEASE_VERSION }}-aria2
            type=raw,value=aria2

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: aria2.Dockerfile
          platforms: |
            linux/386
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
            linux/arm/v6
          push: true
          build-args: |
            RELEASE_VERSION=${{ steps.set-version.outputs.RELEASE_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
